{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48],"program":"C:\\Users\\Alan Ma\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","strsim","C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=38a57646286776af","-C","extra-filename=-38a57646286776af","--out-dir","d:\\Rust\\particle\\target\\rls\\debug\\deps","-L","dependency=d:\\Rust\\particle\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alan Ma\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[100,58,92,82,117,115,116,92,112,97,114,116,105,99,108,101,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,115,116,114,115,105,109,45,51,56,97,53,55,54,52,54,50,56,54,55,55,54,97,102,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"strsim","disambiguator":[16524514563122222064,10966327797335084518]},"crate_root":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8100275305345997703,4204599774300844932]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[7211464789892163899,9298215481423160977]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12941446791289701649,16574759104032803494]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5726791440103702477,4857370051569135156]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[14226999798207449551,2410505242449285096]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2286696234426622952,13081688178139152518]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7393768614462489494,5535855646915259283]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[8724220403251620298,7510455413141003565]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":0,"byte_end":18532,"line_start":1,"line_end":698,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\strsim-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":32},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" This library implements string similarity metrics.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":21},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":184,"byte_end":203,"line_start":9,"line_end":9,"column_start":5,"column_end":24},"name":"DifferentLengthArgs","qualname":"::StrSimError::DifferentLengthArgs","value":"StrSimError::DifferentLengthArgs","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":30},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":166,"byte_end":177,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"StrSimError","qualname":"::StrSimError","value":"StrSimError::{DifferentLengthArgs}","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":216,"byte_end":229,"line_start":12,"line_end":12,"column_start":10,"column_end":23},"name":"HammingResult","qualname":"::HammingResult","value":"Result<usize, StrSimError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":601,"byte_end":608,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"hamming","qualname":"::hamming","value":"fn (a: &str, b: &str) -> HammingResult","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of positions in the two strings where the characters\n differ. Returns an error if the strings have different lengths.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1240,"byte_end":1244,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"jaro","qualname":"::jaro","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Calculates the Jaro similarity between two strings. The returned value\n is between 0.0 and 1.0 (higher value means more similar).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3070,"byte_end":3082,"line_start":116,"line_end":116,"column_start":8,"column_end":20},"name":"jaro_winkler","qualname":"::jaro_winkler","value":"fn (a: &str, b: &str) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Like Jaro but gives a boost to strings that have a common prefix.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":3838,"byte_end":3849,"line_start":143,"line_end":143,"column_start":8,"column_end":19},"name":"levenshtein","qualname":"::levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculates the minimum number of insertions, deletions, and substitutions\n required to change one string into the other.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":4810,"byte_end":4822,"line_start":182,"line_end":182,"column_start":8,"column_end":20},"name":"osa_distance","qualname":"::osa_distance","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like Levenshtein but allows for adjacent transpositions. Each substring can\n only be edited once.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,116,114,115,105,109,45,48,46,55,46,48,92,115,114,99,92,108,105,98,46,114,115],"byte_start":6616,"byte_end":6635,"line_start":236,"line_end":236,"column_start":8,"column_end":27},"name":"damerau_levenshtein","qualname":"::damerau_levenshtein","value":"fn (a: &str, b: &str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Like optimal string alignment, but substrings can be edited an unlimited\n number of times, and the triangle inequality holds.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}