{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49],"program":"C:\\Users\\Alan Ma\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","rustc_hash","C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=908dac864f92edb1","-C","extra-filename=-908dac864f92edb1","--out-dir","d:\\Rust\\particle\\target\\rls\\debug\\deps","-L","dependency=d:\\Rust\\particle\\target\\rls\\debug\\deps","--extern","byteorder=d:\\Rust\\particle\\target\\rls\\debug\\deps\\libbyteorder-946e9fd62250fa8b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alan Ma\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[100,58,92,82,117,115,116,92,112,97,114,116,105,99,108,101,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,114,117,115,116,99,95,104,97,115,104,45,57,48,56,100,97,99,56,54,52,102,57,50,101,100,98,49,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rustc_hash","disambiguator":[18108880939459279161,9979004371898777624]},"crate_root":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8100275305345997703,4204599774300844932]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[7211464789892163899,9298215481423160977]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12941446791289701649,16574759104032803494]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5726791440103702477,4857370051569135156]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[14226999798207449551,2410505242449285096]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2286696234426622952,13081688178139152518]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7393768614462489494,5535855646915259283]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[8724220403251620298,7510455413141003565]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","num":9,"id":{"name":"byteorder","disambiguator":[15695992989195914583,11026798155599576196]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":467,"byte_end":4166,"line_start":11,"line_end":136,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":467,"byte_end":4166,"line_start":11,"line_end":136,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\rustc-hash-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":" Fast, non-cryptographic hash used by rustc and Firefox.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":983,"byte_end":992,"line_start":32,"line_end":32,"column_start":10,"column_end":19},"name":"FxHashMap","qualname":"::FxHashMap","value":"HashMap<K, V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1116,"byte_end":1125,"line_start":35,"line_end":35,"column_start":10,"column_end":19},"name":"FxHashSet","qualname":"::FxHashSet","value":"HashSet<V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1892,"byte_end":1900,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"FxHasher","qualname":"::FxHasher","value":"FxHasher {  }","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" A speedy hash algorithm for use within rustc. The hashmap in liballoc\n by default uses SipHash which isn't quite as speedy as we want. In the\n compiler we're not really worried about DOS attempts, so we use a fast\n non-cryptographic hash.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2078,"byte_end":2086,"line_start":57,"line_end":57,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2177,"byte_end":2185,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2341,"byte_end":2349,"line_start":71,"line_end":71,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2078,"byte_end":2086,"line_start":57,"line_end":57,"column_start":18,"column_end":26},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":2550}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2177,"byte_end":2185,"line_start":64,"line_end":64,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,114,117,115,116,99,45,104,97,115,104,45,49,46,48,46,49,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2341,"byte_end":2349,"line_start":71,"line_end":71,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":36},"to":{"krate":2,"index":7538}}]}