{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52],"program":"C:\\Users\\Alan Ma\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","simplelog","C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"term\"","-C","metadata=fdf501b42af71cee","-C","extra-filename=-fdf501b42af71cee","--out-dir","d:\\Rust\\particle\\target\\rls\\debug\\deps","-L","dependency=d:\\Rust\\particle\\target\\rls\\debug\\deps","--extern","log=d:\\Rust\\particle\\target\\rls\\debug\\deps\\liblog-17aafa2e8425a1bf.rmeta","--extern","term=d:\\Rust\\particle\\target\\rls\\debug\\deps\\libterm-a65b66da0c4b90de.rmeta","--extern","time=d:\\Rust\\particle\\target\\rls\\debug\\deps\\libtime-fe1e140459f7b869.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Alan Ma\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":[100,58,92,82,117,115,116,92,112,97,114,116,105,99,108,101,92,116,97,114,103,101,116,92,114,108,115,92,100,101,98,117,103,92,100,101,112,115,92,108,105,98,115,105,109,112,108,101,108,111,103,45,102,100,102,53,48,49,98,52,50,97,102,55,49,99,101,101,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"simplelog","disambiguator":[5808446911927623673,2629039602756163393]},"crate_root":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src","external_crates":[{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[8100275305345997703,4204599774300844932]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[7211464789892163899,9298215481423160977]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12941446791289701649,16574759104032803494]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":4,"id":{"name":"alloc","disambiguator":[5726791440103702477,4857370051569135156]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[14226999798207449551,2410505242449285096]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2286696234426622952,13081688178139152518]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7393768614462489494,5535855646915259283]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[8724220403251620298,7510455413141003565]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":9,"id":{"name":"log","disambiguator":[5967568758045722080,6711837517449026063]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":10,"id":{"name":"log","disambiguator":[1712986830438791436,1693126562525421146]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":11,"id":{"name":"cfg_if","disambiguator":[17120425943101594753,13010513793605772649]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":12,"id":{"name":"term","disambiguator":[17642377157868820969,13024509411209232945]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":13,"id":{"name":"kernel32","disambiguator":[9986338037192760839,7264839390675582285]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":14,"id":{"name":"winapi","disambiguator":[518485597429918123,15573422042883112032]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":15,"id":{"name":"time","disambiguator":[9949122411130266690,9413304652480758266]}},{"file_name":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","num":16,"id":{"name":"winapi","disambiguator":[5530532316852833478,13855989211231803674]}}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":334,"byte_end":7490,"line_start":8,"line_end":189,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1192,"byte_end":1198,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1224,"byte_end":1236,"line_start":32,"line_end":32,"column_start":25,"column_end":37},"alias_span":null,"name":"SimpleLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1238,"byte_end":1249,"line_start":32,"line_end":32,"column_start":39,"column_end":50},"alias_span":null,"name":"WriteLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1251,"byte_end":1265,"line_start":32,"line_end":32,"column_start":52,"column_end":66},"alias_span":null,"name":"CombinedLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1317,"byte_end":1327,"line_start":34,"line_end":34,"column_start":25,"column_end":35},"alias_span":null,"name":"TermLogger","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1329,"byte_end":1341,"line_start":34,"line_end":34,"column_start":37,"column_end":49},"alias_span":null,"name":"TermLogError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":9,"index":268},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1359,"byte_end":1367,"line_start":36,"line_end":36,"column_start":15,"column_end":23},"alias_span":null,"name":"LogLevel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":9,"index":280},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1369,"byte_end":1383,"line_start":36,"line_end":36,"column_start":25,"column_end":39},"alias_span":null,"name":"LogLevelFilter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":334,"byte_end":7490,"line_start":8,"line_end":189,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Alan Ma\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\simplelog-0.4.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":320},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":334}],"decl_id":null,"docs":"\n `simplelog` provides a series of logging facilities, that can be easily combined.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1025,"byte_end":1047,"line_start":21,"line_end":21,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8278,"byte_end":8284,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::Config","value":"Config { time, level, target, location }","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" Configuration for the Loggers","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8267,"byte_end":8684,"line_start":18,"line_end":28,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8267,"byte_end":8684,"line_start":18,"line_end":28,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":73},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8360,"byte_end":8364,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"time","qualname":"::config::Config::time","value":"std::option::Option<log::LogLevel>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"At which level and below the current time shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":75},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8457,"byte_end":8462,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"level","qualname":"::config::Config::level","value":"std::option::Option<log::LogLevel>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"At which level and below the level itself shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8549,"byte_end":8555,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"target","qualname":"::config::Config::target","value":"std::option::Option<log::LogLevel>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"At which level and below the target shall be logged\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8655,"byte_end":8663,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"location","qualname":"::config::Config::location","value":"std::option::Option<log::LogLevel>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"At which level and below a source code reference shall be logged\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":9895,"byte_end":9907,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"name":"SimpleLogger","qualname":"::loggers::simplelog::SimpleLogger","value":"SimpleLogger {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21}],"decl_id":null,"docs":" The SimpleLogger struct. Provides a very basic Logger implementation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":10478,"byte_end":10482,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"init","qualname":"<SimpleLogger>::init","value":"fn (log_level: LogLevelFilter, config: Config) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the SimpleLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11336,"byte_end":11339,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<SimpleLogger>::new","value":"fn (log_level: LogLevelFilter, config: Config) -> Box<SimpleLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":81},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13042,"byte_end":13051,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"SetLogger","qualname":"::loggers::termlog::TermLogError::SetLogger","value":"TermLogError::SetLogger(SetLoggerError)","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"The type returned by set_logger if set_logger has already been called.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13303,"byte_end":13307,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Term","qualname":"::loggers::termlog::TermLogError::Term","value":"TermLogError::Term","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"TermLogger initialization might also fail if stdout or stderr could not be opened,\ne.g. when no tty is attached to the process, it runs detached in the background, etc\n This is represented by the `Term` Kind\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":364},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":12945,"byte_end":12957,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"TermLogError","qualname":"::loggers::termlog::TermLogError","value":"TermLogError::{SetLogger, Term}","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":85}],"decl_id":null,"docs":" TermLogger error type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":14128,"byte_end":14138,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"TermLogger","qualname":"::loggers::termlog::TermLogger","value":"TermLogger {  }","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"decl_id":null,"docs":" The TermLogger struct. Provides a stderr/out based Logger implementation","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":14782,"byte_end":14786,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"init","qualname":"<TermLogger>::init","value":"fn (log_level: LogLevelFilter, config: Config) -> Result<(), TermLogError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the TermLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":15708,"byte_end":15711,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<TermLogger>::new","value":"fn (log_level: LogLevelFilter, config: Config) -> Option<Box<TermLogger>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":18919,"byte_end":18930,"line_start":17,"line_end":17,"column_start":12,"column_end":23},"name":"WriteLogger","qualname":"::loggers::writelog::WriteLogger","value":"WriteLogger {  }","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45}],"decl_id":null,"docs":" The WriteLogger struct. Provides a Logger implementation for structs implementing `Write`, e.g. File\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19666,"byte_end":19670,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"init","qualname":"<WriteLogger<W>>::init","value":"fn (log_level: LogLevelFilter, config: Config, writable: W) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the WriteLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":20630,"byte_end":20633,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteLogger<W>>::new","value":"fn (log_level: LogLevelFilter, config: Config, writable: W) -> Box<WriteLogger<W>>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter what is globally set.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":22199,"byte_end":22213,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"CombinedLogger","qualname":"::loggers::comblog::CombinedLogger","value":"CombinedLogger {  }","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" The CombinedLogger struct. Provides a Logger implementation that proxies multiple Loggers as one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":23334,"byte_end":23338,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"init","qualname":"<CombinedLogger>::init","value":"fn (logger: Vec<Box<SharedLogger>>) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" init function. Globally initializes the CombinedLogger as the one and only used log facility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":24588,"byte_end":24591,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<CombinedLogger>::new","value":"fn (logger: Vec<Box<SharedLogger>>) -> Box<CombinedLogger>","parent":null,"children":[],"decl_id":null,"docs":" allows to create a new logger, that can be independently used, no matter whats globally set.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1567,"byte_end":1579,"line_start":45,"line_end":45,"column_start":11,"column_end":23},"name":"SharedLogger","qualname":"::SharedLogger","value":"SharedLogger: Log","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340}],"decl_id":null,"docs":" Trait to have a common interface to obtain the LogLevel of Loggers","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1919,"byte_end":1924,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"level","qualname":"::SharedLogger::level","value":"fn (&self) -> LogLevelFilter","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Returns the set LogLevel for this Logger","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2369,"byte_end":2375,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"config","qualname":"::SharedLogger::config","value":"fn (&self) -> Option<&Config>","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Inspect the config of a running Logger","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":2460,"byte_end":2466,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"as_log","qualname":"::SharedLogger::as_log","value":"fn (self: Box<Self>) -> Box<Log>","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":" Returns the logger as a Log trait object\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8703,"byte_end":8709,"line_start":30,"line_end":30,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":9965,"byte_end":9977,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11496,"byte_end":11508,"line_start":63,"line_end":63,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":12240,"byte_end":12252,"line_start":87,"line_end":87,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13334,"byte_end":13346,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13527,"byte_end":13539,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13914,"byte_end":13926,"line_start":52,"line_end":52,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":14276,"byte_end":14286,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":17770,"byte_end":17780,"line_start":170,"line_end":170,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":17994,"byte_end":18004,"line_start":181,"line_end":181,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19066,"byte_end":19077,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":20864,"byte_end":20875,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21270,"byte_end":21281,"line_start":82,"line_end":82,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":22287,"byte_end":22301,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":24927,"byte_end":24941,"line_start":91,"line_end":91,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":25258,"byte_end":25272,"line_start":106,"line_end":106,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,99,111,110,102,105,103,46,114,115],"byte_start":8703,"byte_end":8709,"line_start":30,"line_end":30,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":342},"to":{"krate":2,"index":2550}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":9965,"byte_end":9977,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":11496,"byte_end":11508,"line_start":63,"line_end":63,"column_start":14,"column_end":26},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":54},"to":{"krate":9,"index":176}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,115,105,109,112,108,101,108,111,103,46,114,115],"byte_start":12240,"byte_end":12252,"line_start":87,"line_end":87,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":54},"to":{"krate":0,"index":334}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13334,"byte_end":13346,"line_start":28,"line_end":28,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":364},"to":{"krate":2,"index":7970}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13527,"byte_end":13539,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":364},"to":{"krate":1,"index":2344}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":13914,"byte_end":13926,"line_start":52,"line_end":52,"column_start":31,"column_end":43},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":364},"to":{"krate":2,"index":2572}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":14276,"byte_end":14286,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":17770,"byte_end":17780,"line_start":170,"line_end":170,"column_start":14,"column_end":24},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":152},"to":{"krate":9,"index":176}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,116,101,114,109,108,111,103,46,114,115],"byte_start":17994,"byte_end":18004,"line_start":181,"line_end":181,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":152},"to":{"krate":0,"index":334}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":19066,"byte_end":19077,"line_start":23,"line_end":23,"column_start":33,"column_end":44},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":20864,"byte_end":20875,"line_start":68,"line_end":68,"column_start":41,"column_end":52},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":206},"to":{"krate":9,"index":176}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,119,114,105,116,101,108,111,103,46,114,115],"byte_start":21270,"byte_end":21281,"line_start":82,"line_end":82,"column_start":50,"column_end":61},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":206},"to":{"krate":0,"index":334}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":22287,"byte_end":22301,"line_start":21,"line_end":21,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":24927,"byte_end":24941,"line_start":91,"line_end":91,"column_start":14,"column_end":28},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":250},"to":{"krate":9,"index":176}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,111,103,103,101,114,115,92,99,111,109,98,108,111,103,46,114,115],"byte_start":25258,"byte_end":25272,"line_start":106,"line_end":106,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":250},"to":{"krate":0,"index":334}},{"span":{"file_name":[67,58,92,85,115,101,114,115,92,65,108,97,110,32,77,97,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,115,105,109,112,108,101,108,111,103,45,48,46,52,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":1581,"byte_end":1584,"line_start":45,"line_end":45,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":9,"index":176},"to":{"krate":0,"index":334}}]}